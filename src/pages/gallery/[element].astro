---
import Pagesection from "../../components/sections/pagesection.astro";
import Layout from "../../layout/layout.astro";
import Image from "astro/components/Image.astro";
import { query } from "../../lib/db";

export const prerender = false;

// Tell Astro to pre-render one page per element
export async function getStaticPaths() {
  const elements = [
    "Darkness",
    "Light",
    "Fire",
    "Water",
    "Earth",
    "Wind",
    "Nature",
    "Lightning",
    "Ice",
  ];

  return elements.map((el) => ({
    params: { element: el.toLowerCase() },
  }));
}

// Get element from URL param
const { element } = Astro.params;

// Capitalize it to match DB values
const capitalized = element.charAt(0).toUpperCase() + element.slice(1);

// Fetch matching cards from DB
const cards = await query(
  "SELECT * FROM cards WHERE element = $1 ORDER BY name ASC",
  [capitalized]
);
---

<Layout>
  <Pagesection size="md">
    <h1>{capitalized} Cards</h1>
    <div class="grid-column">
      {
        cards.map((card) => (
          <a href={`/cards/${card.slug}`} class="card-link">
            <img
              src={card.image}
              alt={card.name || "Guardian Card"}
              width="300"
              height="300"
              class="card-image"
              loading="lazy"
              decoding="async"
            />
          </a>
        ))
      }
    </div>
  </Pagesection>
</Layout>

<style>
  :root {
    --grid-gap: 1rem;
    --grid-max-col-count: 4;
    --grid-min-col-size: 258px;
  }

  .card-image {
    width: 100%;
    height: auto;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease-in-out;
  }

  .card-link {
    display: block;
    text-decoration: none;
  }
</style>
