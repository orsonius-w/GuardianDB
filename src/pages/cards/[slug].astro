---
// 1. Required imports
import Layout from "../../layout/layout.astro";
import Pagesection from "../../components/sections/pagesection.astro";
import Image from "astro/components/Image.astro";

// 2. Get all slugs at build time
export async function getStaticPaths() {
  const APP_SCRIPT_URL =
    "https://script.google.com/macros/s/AKfycbyWizmd3F3PXOJD5yu6mg2-CO97UTf7Xcel8Hh_O8wz8MAmfs6YxYePT0Lbh7DXL4Pi/exec";
  const res = await fetch(APP_SCRIPT_URL);
  const cards = await res.json();

  return cards.map((card) => ({
    params: { slug: card.slug },
  }));
}

// 3. Get current card using Astro.params
const APP_SCRIPT_URL =
  "https://script.google.com/macros/s/AKfycbyWizmd3F3PXOJD5yu6mg2-CO97UTf7Xcel8Hh_O8wz8MAmfs6YxYePT0Lbh7DXL4Pi/exec";
const { slug } = Astro.params;
const res = await fetch(APP_SCRIPT_URL);
const cards = await res.json();
const card = cards.find((c) => c.slug === slug);

if (!card) {
  throw new Error(`Card with slug "${slug}" not found`);
}
---

---

<Layout>
  <Pagesection size="md">
    <div class="wrapper">
      <div class="col">
        <Image
          src={card.image}
          alt={card.name || "Guardian Card"}
          width="300"
          height="300"
          class="card-image"
          loading="lazy"
          decoding="async"
        />
      </div>
      <div class="col">
        <h2>{card.name}</h2>

        <p>
          <strong>Cost:</strong>
          {card.cost}
          {card.converted && <span class="small-text">({card.converted})</span>}
        </p>
        <p>
          {card.type}
          {card.subtype && ` - ${card.subtype}`}
          {card.supertype && ` - ${card.supertype}`}
          {card.element && ` ${card.element}`}
        </p>
        <p>
          {card.combat}
        </p>
        <p class="card-text">
          {card.text}
        </p>
        <p>
          {
            card.life !== undefined && card.life !== null && (
              <span>
                <strong>Life:</strong> {card.life}
              </span>
            )
          }
          {
            card.mana !== undefined && card.mana !== null && (
              <span>
                <strong>Mana:</strong> {card.mana}
              </span>
            )
          }
          {
            card.attack !== undefined && card.attack !== null && (
              <span>
                <strong>Attack:</strong> {card.attack}
              </span>
            )
          }
          {
            card.defense !== undefined && card.defense !== null && (
              <span>
                <strong>Defense:</strong> {card.defense}
              </span>
            )
          }
          {
            card.magic !== undefined && card.magic !== null && (
              <span>
                <strong>Magic:</strong> {card.magic}
              </span>
            )
          }
          {
            card.resistance !== undefined && card.resistance !== null && (
              <span>
                <strong>Resistance:</strong> {card.resistance}
              </span>
            )
          }
          {
            card.movement !== undefined && card.movement !== null && (
              <span>
                <strong>Move:</strong> {card.movement}
              </span>
            )
          }
        </p>

        <p>
          {card.limitation && `${card.limitation}, `}
          {card.rarity}
        </p>
      </div>
    </div>
  </Pagesection>
</Layout>

<style>
  .wrapper {
    display: flex;
    flex-wrap: wrap; /* Allows wrapping on smaller screens */
    gap: 2rem;
  }

  .col {
    flex: 1; /* Distributes space evenly */
    min-width: 300px; /* Ensures columns don't get too small */
  }

  .card-image {
    width: 100%;
    max-width: 400px; /* Cap image size for single page view */
    height: auto;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: transform 0.2s ease-in-out;
  }

  .card-text {
    border: solid 1px hsl(0 0 100 / 0.3);
    padding: 1rem;
  }

  .small-text {
    font-size: 0.8rem;
    color: hsl(0 0 100 / 0.6);
  }
</style>
